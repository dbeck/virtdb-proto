package virtdb.interface.pb;
import "common.proto";

message Config {
  required string    Name            = 1;
  required KeyValue  ConfigData      = 2;
  optional uint64    ValidForMs      = 3;
}

enum ServiceType {
  QUERY            = 1;
  COLUMN           = 2;
  META_DATA        = 3;
  DB_CONFIG        = 4;
  DB_CONFIG_QUERY  = 5;
  LOG_RECORD       = 6;
  LOG_COMMAND      = 7;
  CONFIG           = 8;
  ENDPOINT         = 9;
}

enum ConnectionType {
  REQ_REP    = 1;
  PUSH_PULL  = 2;
  PUB_SUB    = 3;
}

// -- config
// app -> config_svc ( Config ) :   app:PUSH  svc:PULL 
// gui -> config_svc ( Config ) :   gui:PUSH  svc:PULL 
// app <- config_svc ( Config ) :   app:PULL  svc:PUSH

// -- endpoint
// app <- config_svc ( Endpoint ) : app:REQ   svc:REP  #1! ConfigService, Own endpoints
// app <- config_svc ( Endpoint ) : app:SUB   svc:PUB

// svc: PULL/Cfg, REP/EP, PUB/EP

// 1, app->config_svc REQ:Endpoint ( 'ME', 'ENDPOINT' ) -> REP:Endpoint ( '*', '*' )
// 2, app->config_svc PUSH:Config ()

message Connection {
  required ConnectionType  Type      = 1;
  repeated string          Address   = 2;
}

message Endpoint {
  required string           Name          = 1;
  required ServiceType      SvcType       = 2;
  repeated Connection       Connections   = 3;
}

